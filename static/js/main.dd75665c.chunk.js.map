{"version":3,"sources":["types/types.js","store/store.js","reducers/authReducer.js","reducers/bandsReducer.js","reducers/albumsReducer.js","reducers/genresReducer.js","routers/PrivateRoute.js","routers/PublicRoute.js","components/BandGridItem.js","components/BandsGrid.js","components/BandDetails.js","actions/bands.js","hooks/UseForms.js","components/shared/NavBar.js","actions/auth.js","actions/albums.js","actions/genres.js","routers/DashboardRoutes.js","components/Login.js","routers/AppRoutes.js","App.js","index.js"],"names":["types","reducers","combineReducers","auth","state","action","type","email","payload","isLogged","bands","albums","genres","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","PrivateRoute","isAuthenticated","Component","component","rest","localStorage","setItem","location","pathname","props","to","PublicRoute","BandGridItem","band","className","name","genreCode","year","country","id","BandsGrid","useSelector","length","map","BandDetails","albumsByBand","useParams","find","Number","filter","album","bandId","members","member","undefined","allBands","useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","target","value","NavBar","dispatch","useDispatch","param","formValues","handleBandsByGenre","genre","a","fetch","resp","json","aria-current","onClick","href","role","data-bs-toggle","aria-expanded","aria-labelledby","code","onSubmit","e","preventDefault","getBandsByName","placeholder","aria-label","autoComplete","onChange","allAlbums","allGenres","DashboardRoutes","exact","path","Login","password","login","htmlFor","required","AppRouter","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dd75665c.chunk.js","sourcesContent":["export const types = {\n  login: '[Auth] Login',\n  logout: '[Auth] Logout',\n\n  allBands: '[Bands] Get_all_bands',\n  bandsByGenre: '[Bands] Get_bands_by_genre',\n\n  allAlbums: '[Albums] Get_all_albums',\n\n  allGenres: '[Genres] Get_all_genres',\n};\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { authReducer } from '../reducers/authReducer';\nimport { bandsReducer } from '../reducers/bandsReducer';\nimport {albumsReducer} from \"../reducers/albumsReducer\";\nimport {genresReducer} from \"../reducers/genresReducer\";\n\nconst reducers = combineReducers({\n  auth: authReducer,\n  bands: bandsReducer,\n  albums: albumsReducer,\n  genres: genresReducer,\n});\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nexport const store = createStore(\n  reducers,\n  composeEnhancers(\n    applyMiddleware( thunk )\n  )\n);\n","import { types } from '../types/types';\n\nexport const authReducer = (state = {}, action) => {\n  switch (action.type) {\n  case types.login:\n    return {\n      email: action.payload.email,\n      isLogged: true,\n    };\n\n  case types.logout:\n    return {\n      isLogged: false,\n    };\n\n  default:\n    return state;\n  }\n};\n","import { types } from '../types/types';\n\nexport const bandsReducer = (state = {}, action) => {\n  switch (action.type) {\n  case types.allBands:\n    return {\n      bands: action.payload.bands,\n    };\n\n  default:\n    return state;\n  }\n};\n","import { types } from '../types/types';\n\nexport const albumsReducer = (state = {}, action) => {\n  switch (action.type) {\n  case types.allAlbums:\n    return {\n      albums: action.payload.albums,\n    };\n\n  default:\n    return state;\n  }\n};\n","import { types } from '../types/types';\n\nexport const genresReducer = (state = {}, action) => {\n  switch (action.type) {\n  case types.allGenres:\n    return {\n      genres: action.payload.genres,\n    };\n\n  default:\n    return state;\n  }\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\nexport const PrivateRoute = ({ isAuthenticated, component: Component, ...rest }) => {\n  localStorage.setItem('lastPath', rest.location.pathname);\n\n  return (\n    <Route {...rest} component={props => (isAuthenticated ? <Component {...props} /> : <Redirect to=\"/login\" />)} />\n  );\n};\n\nPrivateRoute.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired,\n  component: PropTypes.func.isRequired\n};\n","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PublicRoute = ({ isAuthenticated, component: Component, ...rest }) => {\n  return <Route {...rest} component={props => (isAuthenticated ? <Redirect to=\"/\" /> : <Component {...props} /> )} />;\n};\n\nPublicRoute.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired,\n  component: PropTypes.func.isRequired\n};\n","import { Link } from 'react-router-dom';\n\nexport const BandGridItem = ({ band }) => {\n  return (\n    <div className=\"card text-dark bg-light m-4 w300 animate__animated animate__fadeIn \">\n      <div className=\"card-header fs-4 fw-bold\">{band.name}</div>\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">Genre: {band.genreCode}</h5>\n        <p className=\"card-text\">Year: {band.year}</p>\n        <p className=\"card-text\">Country: {band.country}</p>\n        <Link className=\"btn btn-link float-end\" to={`/details/${band.id}`}>See More...</Link>\n      </div>\n    </div>\n  );\n};\n","import '../App.css';\nimport { BandGridItem } from './BandGridItem';\nimport { useSelector } from 'react-redux';\n\nexport const BandsGrid = () => {\n  const bands  = useSelector(state => state.bands.bands) || [];\n\n  return (\n    <div className=\"d-flex justify-content-center flex-wrap\">\n      {bands.length > 0 && bands.map(band => <BandGridItem band={band} key={band.id} />)}\n    </div>\n  );\n};\n","import React from 'react';\nimport {Link, useParams} from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nexport const BandDetails = () => {\n  const bands = useSelector(state => state.bands.bands) || [];\n  const albums = useSelector(state => state.albums.albums) || [];\n  let band = {};\n  let albumsByBand = [];\n  const { id } = useParams();\n\n  if (bands.length > 0) {\n    band = bands.find(band => band.id === Number(id));\n    albumsByBand = albums.filter( album => album.bandId === Number(id));\n  }\n\n  return (\n    <div>\n      {\n        (band !== null || band || undefined) && (\n          <div className=\"card text-dark bg-light m-4 p-4 animate__animated animate__fadeIn \">\n            <div className=\"card-header fs-2 fw-bold\">{band.name}</div>\n            <div className=\"card-body\">\n              <h5 className=\"card-title fs-4\">Genre: {band.genreCode}</h5>\n              <p className=\"card-text fs-4 mt-3\">Year: {band.year}</p>\n              <p className=\"card-text fs-4\">Country: {band.country}</p>\n              <h4 className=\"fs-4\">Members</h4>\n              <ul className=\"list-group fs-4\">\n                {band.members.map(member => (\n                  <li key={member.name} className=\"list-group-item fs-5\">{member.name}</li>\n                ))}\n              </ul>\n              {\n                (albumsByBand.length > 0) && (<h4 className=\"fs-4 mt-3\">Albums</h4>)\n              }\n              <ul className=\"list-group fs-4 mt-3\">\n                {albumsByBand.map(album => (\n                  <li key={album.name} className=\"list-group-item fs-5\">{album.name} - {album.year}</li>\n                ))}\n              </ul>\n            </div>\n            <Link className=\"btn btn-link float-end\" to={`/bands`}>Go Back...</Link>\n          </div>\n        )\n      }\n    </div>\n  \n  );\n};\n","import { types } from '../types/types';\n\nexport const getAllBands = () => {\n  return async dispatch => {\n    let resp = await fetch('https://my-json-server.typicode.com/improvein/dev-challenge/bands');\n    resp = await resp.json();\n    dispatch(allBands(resp));\n  };\n};\nexport const getBandsByName = (param) => {\n  return async dispatch => {\n    let resp = await fetch(`https://my-json-server.typicode.com/improvein/dev-challenge/bands?q=${param}`);\n    resp = await resp.json();\n    dispatch(allBands(resp));\n  };\n};\nexport const getBandsByGenre = (genre) => {\n  return async dispatch => {\n    let resp = await fetch(`https://my-json-server.typicode.com/improvein/dev-challenge/bands?genreCode=${genre}`);\n    resp = await resp.json();\n    dispatch(allBands(resp));\n  };\n};\n\n\nexport const allBands = bands => ({\n  type: types.allBands,\n  payload: {\n    bands,\n  },\n});\n","import { useState } from 'react';\n\nexport const useForm = (initialState = {}) => {\n  const [values, setValues] = useState(initialState);\n\n  const reset = (newFormState = initialState) => {\n    setValues(newFormState);\n  };\n\n  const handleInputChange = ({ target }) => {\n    setValues({\n      ...values,\n      [target.name]: target.value,\n    });\n  };\n\n  return [values, handleInputChange, reset];\n};\n","import {useDispatch, useSelector} from 'react-redux';\n\nimport '../../App.css';\nimport { logout } from '../../actions/auth';\nimport { getBandsByGenre, getBandsByName } from '../../actions/bands';\nimport { useForm } from '../../hooks/UseForms';\nimport {Link} from \"react-router-dom\";\n\nexport const NavBar = () => {\n  const dispatch = useDispatch();\n  const genres  = useSelector(state => state.genres.genres) || [];\n\n  const [formValues, handleInputChange, reset] = useForm({\n    param: '',\n  });\n  \n  const { param } = formValues;\n  \n  const handleSearch = (e) => {\n    e.preventDefault();\n    dispatch(getBandsByName(param));\n    reset();\n  };\n\n  const handleBandsByGenre = genreCode => {\n    dispatch(getBandsByGenre(genreCode));\n  };\n\n  const handleLogout = () => {\n    dispatch(logout(''));\n  };\n\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n      <div className=\"container-fluid\">\n        <Link className=\"navbar-brand\" to={'/bands'}>\n          Band React App\n        </Link>\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n            <li className=\"nav-item\">\n              <Link className=\"nav-link active\" aria-current=\"page\" to={'/bands'}>\n                Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" onClick={handleLogout}>\n                Logout\n              </a>\n            </li>\n            <li className=\"nav-item dropdown\">\n              <a\n                className=\"nav-link dropdown-toggle\"\n                href=\"#\"\n                id=\"navbarDropdown\"\n                role=\"button\"\n                data-bs-toggle=\"dropdown\"\n                aria-expanded=\"false\"\n              >\n                Choose a Genre\n              </a>\n              <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n                {genres.map(genre => (\n                  <li key={genre.code}>\n                    {' '}\n                    <span className=\"dropdown-item\" onClick={() => handleBandsByGenre(genre.code)}>\n                      {genre.name}\n                    </span>\n                  </li>\n                ))}\n              </ul>\n            </li>\n          </ul>\n          <form className=\"d-flex\" onSubmit={handleSearch}>\n            <input\n              className=\"form-control me-2\"\n              type=\"text\"\n              placeholder=\"Search by Name\"\n              aria-label=\"Search\"\n              name=\"param\"\n              autoComplete=\"off\"\n              value={param}\n              onChange={handleInputChange}\n            />\n            <button className=\"btn btn-success\" type=\"submit\">\n              Search\n            </button>\n          </form>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { types } from \"../types/types\";\n\n\nexport const login = (email) => ({\n  type: types.login,\n  payload: {\n    email,\n  },\n});\n\nexport const logout = (email) => ({\n  type: types.logout,\n  payload: {\n    email,\n  },\n});\n\n\n","import { types } from '../types/types';\n\nexport const getAllAlbums = () => {\n  return async dispatch => {\n    let resp = await fetch('https://my-json-server.typicode.com/improvein/dev-challenge/albums');\n    resp = await resp.json();\n    dispatch(allAlbums(resp));\n  };\n};\n\nexport const allAlbums = albums => ({\n  type: types.allAlbums,\n  payload: {\n    albums,\n  },\n});\n","import { types } from '../types/types';\n\nexport const getAllGenres = () => {\n  return async dispatch => {\n    let resp = await fetch('https://my-json-server.typicode.com/improvein/dev-challenge/genre');\n    resp = await resp.json();\n    dispatch(allGenres(resp));\n  };\n};\n\nexport const allGenres = genres => ({\n  type: types.allGenres,\n  payload: {\n    genres,\n  },\n});\n","import React from 'react';\n\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport { BandsGrid } from '../components/BandsGrid';\nimport { BandDetails } from '../components/BandDetails';\nimport { NavBar } from '../components/shared/NavBar';\nimport { useDispatch } from 'react-redux';\nimport { getAllBands } from '../actions/bands';\nimport {getAllAlbums} from \"../actions/albums\";\nimport {getAllGenres} from \"../actions/genres\";\n\nexport const DashboardRoutes = () => {\n  const dispatch = useDispatch();\n  dispatch(getAllBands());\n  dispatch(getAllAlbums());\n  dispatch(getAllGenres());\n\n  return (\n    <>\n      <NavBar />\n      <div className=\"container mt-2\">\n        <Switch>\n          <Route exact path=\"/bands\" component={BandsGrid} />\n          <Route exact path=\"/details/:id\" component={BandDetails} />\n\n          <Redirect to=\"/bands\" />\n        </Switch>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\n\n// import { Link } from 'react-router-dom';\nimport { useForm } from '../hooks/UseForms';\nimport { login } from '../actions/auth';\n\nexport const Login = () => {\n  const dispatch = useDispatch();\n  // const { loading } = useSelector(state => state.ui);\n\n  const [formValues, handleInputChange] = useForm({\n    email: 'nando@gmail.com',\n    password: '123456',\n  });\n\n  const { email, password } = formValues;\n\n  const handleLogin = e => {\n    e.preventDefault();\n    if (email === 'nando@gmail.com' && password === '123456') {\n      dispatch(login(email));\n      localStorage.setItem('email', email);\n      localStorage.setItem('isLogged', 'true');\n    }\n    \n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-md-12 min-vh-100 d-flex flex-column justify-content-center\">\n          <div className=\"row\">\n            <div className=\"col-lg-6 col-md-8 mx-auto\">\n              <div className=\"card rounded shadow shadow-sm\">\n                <div className=\"card-header\">\n                  <h3 className=\"mb-0\">Login</h3>\n                </div>\n                <div className=\"card-body\">\n                  <form className=\"form\" role=\"form\" autoComplete=\"off\" onSubmit={ handleLogin }>\n                    <div className=\"form-group\">\n                      <label htmlFor=\"email\">Email</label>\n                      <input\n                        type=\"email\"\n                        className=\"form-control form-control-lg mt-2 mb-3\"\n                        id=\"email\"\n                        placeholder=\"email\"\n                        autoComplete=\"off\"\n                        name=\"email\"\n                        value={email}\n                        onChange={handleInputChange}\n                        required=\"\"\n                      />\n                    </div>\n                    <div className=\"form-group\">\n                      <label htmlFor=\"password\">Password</label>\n                      <input\n                        type=\"password\"\n                        className=\"form-control form-control-lg mt-2 mb-3\"\n                        id=\"password\"\n                        placeholder=\"password\"\n                        autoComplete=\"off\"\n                        name=\"password\"\n                        value={password}\n                        onChange={handleInputChange}\n                        required=\"\"\n                      />\n                      <div className=\"invalid-feedback\">Enter your password too!</div>\n                    </div>\n                    <button type=\"submit\" className=\"btn btn-success btn-lg float-right\" id=\"btnLogin\">\n                      Login\n                    </button>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { BrowserRouter as Router, Switch } from 'react-router-dom';\n\nimport { PrivateRoute } from './PrivateRoute';\nimport { PublicRoute } from './PublicRoute';\n\nimport { DashboardRoutes } from './DashboardRoutes';\nimport { Login } from '../components/Login';\nimport { useSelector } from 'react-redux';\n\nexport const AppRouter = () => {\n  const isLogged = useSelector(state => state.auth.isLogged) || false;\n\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <PublicRoute exact path=\"/login\" component={Login} isAuthenticated={isLogged} />\n\n          <PrivateRoute path=\"/\" component={DashboardRoutes} isAuthenticated={isLogged} />\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n","import { Provider } from 'react-redux';\n\nimport { store } from './store/store';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.min.js';\n\nimport './App.css';\nimport { AppRouter } from './routers/AppRoutes';\n\n\nexport function App() {\n\n\n  return (\n    <Provider store={ store }>\n      <div>\n        <AppRouter />\n      </div>\n    </Provider>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}